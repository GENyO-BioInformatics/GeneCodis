#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
#multi_accept  on;

events {
    worker_connections  1024;
}


http {
    fastcgi_read_timeout 3d;
    proxy_read_timeout 3d;
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    # Based on recommendation from https://wiki.mozilla.org/Security/Server_Side_TLS
    # ssl_dhparam /etc/ssl/dhparams.pem;      # 2048-bit DH params
    # add_header Strict-Transport-Security "max-age=15768000;
    # includeSubdomains";     # 15768000s = 6 months
    # intermediate configuration that supports some legacy browsers
    # ssl_ciphers      'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA# :ECD    HE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    # ssl_session_cache shared:SSL:10m;	#SSL session cache
    # ssl_session_timeout 1h;

    server {
        listen       80;
        server_name  genecodis.genyo.es;
        location / {
            proxy_pass https://genecodis.genyo.es;
            set $cors '';
            if ($http_origin ~ 'https://genecodis.genyo.es') {
                    set $cors 'true';
            }

            if ($cors = 'true') {
                    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                    # required to be able to read Authorization header in frontend
                    #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            }

            if ($request_method = 'OPTIONS') {
                    # Tell client that this pre-flight info is valid for 20 days
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    return 204;
            }

        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    #HTTPS server

    server {
        listen       443 ssl;
        server_name  genecodis.genyo.es www.;
        fastcgi_read_timeout 3d;
        proxy_read_timeout 3d;

        #ssl     on;
        ssl_certificate      /etc/letsencrypt/live/genecodis.genyo.es/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/genecodis.genyo.es/privkey.pem;

        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;


        location / {
            proxy_pass https://genecodis.genyo.es;
            #include proxy_params;
            set $cors '';
            if ($http_origin ~ 'https://genecodis.genyo.es') {
                    set $cors 'true';
            }

            if ($cors = 'true') {
                    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                    # required to be able to read Authorization header in frontend
                    #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            }

            if ($request_method = 'OPTIONS') {
                    # Tell client that this pre-flight info is valid for 20 days
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    return 204;
            }

        }

    }

}
